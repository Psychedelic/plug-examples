{"ast":null,"code":"import * as IDL from './idl';\nimport { Principal } from '@dfinity/principal';\nimport * as UI from './candid-core';\nconst InputConfig = {\n  parse: parsePrimitive\n};\nconst FormConfig = {\n  render: renderInput\n};\nexport const inputBox = (t, config) => {\n  return new UI.InputBox(t, Object.assign(Object.assign({}, InputConfig), config));\n};\nexport const recordForm = (fields, config) => {\n  return new UI.RecordForm(fields, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const tupleForm = (components, config) => {\n  return new UI.TupleForm(components, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const variantForm = (fields, config) => {\n  return new UI.VariantForm(fields, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const optForm = (ty, config) => {\n  return new UI.OptionForm(ty, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const vecForm = (ty, config) => {\n  return new UI.VecForm(ty, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport class Render extends IDL.Visitor {\n  visitType(t, d) {\n    const input = document.createElement('input');\n    input.classList.add('argument');\n    input.placeholder = t.display();\n    return inputBox(t, {\n      input\n    });\n  }\n\n  visitNull(t, d) {\n    return inputBox(t, {});\n  }\n\n  visitRecord(t, fields, d) {\n    let config = {};\n\n    if (fields.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = {\n        container\n      };\n    }\n\n    const form = recordForm(fields, config);\n    return inputBox(t, {\n      form\n    });\n  }\n\n  visitTuple(t, components, d) {\n    let config = {};\n\n    if (components.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = {\n        container\n      };\n    }\n\n    const form = tupleForm(components, config);\n    return inputBox(t, {\n      form\n    });\n  }\n\n  visitVariant(t, fields, d) {\n    const select = document.createElement('select');\n\n    for (const [key, type] of fields) {\n      const option = new Option(key);\n      select.add(option);\n    }\n\n    select.selectedIndex = -1;\n    select.classList.add('open');\n    const config = {\n      open: select,\n      event: 'change'\n    };\n    const form = variantForm(fields, config);\n    return inputBox(t, {\n      form\n    });\n  }\n\n  visitOpt(t, ty, d) {\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('open');\n    const form = optForm(ty, {\n      open: checkbox,\n      event: 'change'\n    });\n    return inputBox(t, {\n      form\n    });\n  }\n\n  visitVec(t, ty, d) {\n    const len = document.createElement('input');\n    len.type = 'number';\n    len.min = '0';\n    len.max = '100';\n    len.style.width = '8rem';\n    len.placeholder = 'len';\n    len.classList.add('open');\n    const container = document.createElement('div');\n    container.classList.add('popup-form');\n    const form = vecForm(ty, {\n      open: len,\n      event: 'change',\n      container\n    });\n    return inputBox(t, {\n      form\n    });\n  }\n\n  visitRec(t, ty, d) {\n    return renderInput(ty);\n  }\n\n}\n\nclass Parse extends IDL.Visitor {\n  visitNull(t, v) {\n    return null;\n  }\n\n  visitBool(t, v) {\n    if (v === 'true') {\n      return true;\n    }\n\n    if (v === 'false') {\n      return false;\n    }\n\n    throw new Error(`Cannot parse ${v} as boolean`);\n  }\n\n  visitText(t, v) {\n    return v;\n  }\n\n  visitFloat(t, v) {\n    return parseFloat(v);\n  }\n\n  visitNumber(t, v) {\n    return BigInt(v);\n  }\n\n  visitPrincipal(t, v) {\n    return Principal.fromText(v);\n  }\n\n  visitService(t, v) {\n    return Principal.fromText(v);\n  }\n\n  visitFunc(t, v) {\n    const x = v.split('.', 2);\n    return [Principal.fromText(x[0]), x[1]];\n  }\n\n}\n\nclass Random extends IDL.Visitor {\n  visitNull(t, v) {\n    return null;\n  }\n\n  visitBool(t, v) {\n    return Math.random() < 0.5;\n  }\n\n  visitText(t, v) {\n    return Math.random().toString(36).substring(6);\n  }\n\n  visitFloat(t, v) {\n    return Math.random();\n  }\n\n  visitInt(t, v) {\n    return BigInt(this.generateNumber(true));\n  }\n\n  visitNat(t, v) {\n    return BigInt(this.generateNumber(false));\n  }\n\n  visitFixedInt(t, v) {\n    return BigInt(this.generateNumber(true));\n  }\n\n  visitFixedNat(t, v) {\n    return BigInt(this.generateNumber(false));\n  }\n\n  generateNumber(signed) {\n    const num = Math.floor(Math.random() * 100);\n\n    if (signed && Math.random() < 0.5) {\n      return -num;\n    } else {\n      return num;\n    }\n  }\n\n}\n\nfunction parsePrimitive(t, config, d) {\n  if (config.random && d === '') {\n    return t.accept(new Random(), d);\n  } else {\n    return t.accept(new Parse(), d);\n  }\n}\n/**\n *\n * @param t an IDL type\n * @returns an input for that type\n */\n\n\nexport function renderInput(t) {\n  return t.accept(new Render(), null);\n}\n/**\n *\n * @param t an IDL Type\n * @param input an InputBox\n * @param value any\n * @returns rendering that value to the provided input\n */\n\nexport function renderValue(t, input, value) {\n  return t.accept(new RenderValue(), {\n    input,\n    value\n  });\n}\n\nclass RenderValue extends IDL.Visitor {\n  visitType(t, d) {\n    d.input.ui.input.value = t.valueToString(d.value);\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  visitNull(t, d) {}\n\n  visitText(t, d) {\n    d.input.ui.input.value = d.value;\n  }\n\n  visitRec(t, ty, d) {\n    renderValue(ty, d.input, d.value);\n  }\n\n  visitOpt(t, ty, d) {\n    if (d.value.length === 0) {\n      return;\n    } else {\n      const form = d.input.ui.form;\n      const open = form.ui.open;\n      open.checked = true;\n      open.dispatchEvent(new Event(form.ui.event));\n      renderValue(ty, form.form[0], d.value[0]);\n    }\n  }\n\n  visitRecord(t, fields, d) {\n    const form = d.input.ui.form;\n    fields.forEach(([key, type], i) => {\n      renderValue(type, form.form[i], d.value[key]);\n    });\n  }\n\n  visitTuple(t, components, d) {\n    const form = d.input.ui.form;\n    components.forEach((type, i) => {\n      renderValue(type, form.form[i], d.value[i]);\n    });\n  }\n\n  visitVariant(t, fields, d) {\n    const form = d.input.ui.form;\n    const selected = Object.entries(d.value)[0];\n    fields.forEach(([key, type], i) => {\n      if (key === selected[0]) {\n        const open = form.ui.open;\n        open.selectedIndex = i;\n        open.dispatchEvent(new Event(form.ui.event));\n        renderValue(type, form.form[0], selected[1]);\n      }\n    });\n  }\n\n  visitVec(t, ty, d) {\n    const form = d.input.ui.form;\n    const len = d.value.length;\n    const open = form.ui.open;\n    open.value = len;\n    open.dispatchEvent(new Event(form.ui.event));\n    d.value.forEach((v, i) => {\n      renderValue(ty, form.form[i], v);\n    });\n  }\n\n}","map":{"version":3,"sources":["../../src/candid-ui.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as IDL from './idl';\nimport { Principal } from '@dfinity/principal';\nimport * as UI from './candid-core';\nconst InputConfig = { parse: parsePrimitive };\nconst FormConfig = { render: renderInput };\nexport const inputBox = (t, config) => {\n    return new UI.InputBox(t, Object.assign(Object.assign({}, InputConfig), config));\n};\nexport const recordForm = (fields, config) => {\n    return new UI.RecordForm(fields, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const tupleForm = (components, config) => {\n    return new UI.TupleForm(components, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const variantForm = (fields, config) => {\n    return new UI.VariantForm(fields, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const optForm = (ty, config) => {\n    return new UI.OptionForm(ty, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport const vecForm = (ty, config) => {\n    return new UI.VecForm(ty, Object.assign(Object.assign({}, FormConfig), config));\n};\nexport class Render extends IDL.Visitor {\n    visitType(t, d) {\n        const input = document.createElement('input');\n        input.classList.add('argument');\n        input.placeholder = t.display();\n        return inputBox(t, { input });\n    }\n    visitNull(t, d) {\n        return inputBox(t, {});\n    }\n    visitRecord(t, fields, d) {\n        let config = {};\n        if (fields.length > 1) {\n            const container = document.createElement('div');\n            container.classList.add('popup-form');\n            config = { container };\n        }\n        const form = recordForm(fields, config);\n        return inputBox(t, { form });\n    }\n    visitTuple(t, components, d) {\n        let config = {};\n        if (components.length > 1) {\n            const container = document.createElement('div');\n            container.classList.add('popup-form');\n            config = { container };\n        }\n        const form = tupleForm(components, config);\n        return inputBox(t, { form });\n    }\n    visitVariant(t, fields, d) {\n        const select = document.createElement('select');\n        for (const [key, type] of fields) {\n            const option = new Option(key);\n            select.add(option);\n        }\n        select.selectedIndex = -1;\n        select.classList.add('open');\n        const config = { open: select, event: 'change' };\n        const form = variantForm(fields, config);\n        return inputBox(t, { form });\n    }\n    visitOpt(t, ty, d) {\n        const checkbox = document.createElement('input');\n        checkbox.type = 'checkbox';\n        checkbox.classList.add('open');\n        const form = optForm(ty, { open: checkbox, event: 'change' });\n        return inputBox(t, { form });\n    }\n    visitVec(t, ty, d) {\n        const len = document.createElement('input');\n        len.type = 'number';\n        len.min = '0';\n        len.max = '100';\n        len.style.width = '8rem';\n        len.placeholder = 'len';\n        len.classList.add('open');\n        const container = document.createElement('div');\n        container.classList.add('popup-form');\n        const form = vecForm(ty, { open: len, event: 'change', container });\n        return inputBox(t, { form });\n    }\n    visitRec(t, ty, d) {\n        return renderInput(ty);\n    }\n}\nclass Parse extends IDL.Visitor {\n    visitNull(t, v) {\n        return null;\n    }\n    visitBool(t, v) {\n        if (v === 'true') {\n            return true;\n        }\n        if (v === 'false') {\n            return false;\n        }\n        throw new Error(`Cannot parse ${v} as boolean`);\n    }\n    visitText(t, v) {\n        return v;\n    }\n    visitFloat(t, v) {\n        return parseFloat(v);\n    }\n    visitNumber(t, v) {\n        return BigInt(v);\n    }\n    visitPrincipal(t, v) {\n        return Principal.fromText(v);\n    }\n    visitService(t, v) {\n        return Principal.fromText(v);\n    }\n    visitFunc(t, v) {\n        const x = v.split('.', 2);\n        return [Principal.fromText(x[0]), x[1]];\n    }\n}\nclass Random extends IDL.Visitor {\n    visitNull(t, v) {\n        return null;\n    }\n    visitBool(t, v) {\n        return Math.random() < 0.5;\n    }\n    visitText(t, v) {\n        return Math.random().toString(36).substring(6);\n    }\n    visitFloat(t, v) {\n        return Math.random();\n    }\n    visitInt(t, v) {\n        return BigInt(this.generateNumber(true));\n    }\n    visitNat(t, v) {\n        return BigInt(this.generateNumber(false));\n    }\n    visitFixedInt(t, v) {\n        return BigInt(this.generateNumber(true));\n    }\n    visitFixedNat(t, v) {\n        return BigInt(this.generateNumber(false));\n    }\n    generateNumber(signed) {\n        const num = Math.floor(Math.random() * 100);\n        if (signed && Math.random() < 0.5) {\n            return -num;\n        }\n        else {\n            return num;\n        }\n    }\n}\nfunction parsePrimitive(t, config, d) {\n    if (config.random && d === '') {\n        return t.accept(new Random(), d);\n    }\n    else {\n        return t.accept(new Parse(), d);\n    }\n}\n/**\n *\n * @param t an IDL type\n * @returns an input for that type\n */\nexport function renderInput(t) {\n    return t.accept(new Render(), null);\n}\n/**\n *\n * @param t an IDL Type\n * @param input an InputBox\n * @param value any\n * @returns rendering that value to the provided input\n */\nexport function renderValue(t, input, value) {\n    return t.accept(new RenderValue(), { input, value });\n}\nclass RenderValue extends IDL.Visitor {\n    visitType(t, d) {\n        d.input.ui.input.value = t.valueToString(d.value);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    visitNull(t, d) { }\n    visitText(t, d) {\n        d.input.ui.input.value = d.value;\n    }\n    visitRec(t, ty, d) {\n        renderValue(ty, d.input, d.value);\n    }\n    visitOpt(t, ty, d) {\n        if (d.value.length === 0) {\n            return;\n        }\n        else {\n            const form = d.input.ui.form;\n            const open = form.ui.open;\n            open.checked = true;\n            open.dispatchEvent(new Event(form.ui.event));\n            renderValue(ty, form.form[0], d.value[0]);\n        }\n    }\n    visitRecord(t, fields, d) {\n        const form = d.input.ui.form;\n        fields.forEach(([key, type], i) => {\n            renderValue(type, form.form[i], d.value[key]);\n        });\n    }\n    visitTuple(t, components, d) {\n        const form = d.input.ui.form;\n        components.forEach((type, i) => {\n            renderValue(type, form.form[i], d.value[i]);\n        });\n    }\n    visitVariant(t, fields, d) {\n        const form = d.input.ui.form;\n        const selected = Object.entries(d.value)[0];\n        fields.forEach(([key, type], i) => {\n            if (key === selected[0]) {\n                const open = form.ui.open;\n                open.selectedIndex = i;\n                open.dispatchEvent(new Event(form.ui.event));\n                renderValue(type, form.form[0], selected[1]);\n            }\n        });\n    }\n    visitVec(t, ty, d) {\n        const form = d.input.ui.form;\n        const len = d.value.length;\n        const open = form.ui.open;\n        open.value = len;\n        open.dispatchEvent(new Event(form.ui.event));\n        d.value.forEach((v, i) => {\n            renderValue(ty, form.form[i], v);\n        });\n    }\n}\n//# sourceMappingURL=candid-ui.js.map"]},"metadata":{},"sourceType":"module"}