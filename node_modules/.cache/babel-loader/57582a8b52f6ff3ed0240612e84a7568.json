{"ast":null,"code":"export class InputBox {\n  constructor(idl, ui) {\n    this.idl = idl;\n    this.ui = ui;\n    this.label = null;\n    this.value = undefined;\n    const status = document.createElement('span');\n    status.className = 'status';\n    this.status = status;\n\n    if (ui.input) {\n      ui.input.addEventListener('blur', () => {\n        if (ui.input.value === '') {\n          return;\n        }\n\n        this.parse();\n      });\n      ui.input.addEventListener('input', () => {\n        status.style.display = 'none';\n        ui.input.classList.remove('reject');\n      });\n    }\n  }\n\n  isRejected() {\n    return this.value === undefined;\n  }\n\n  parse(config = {}) {\n    if (this.ui.form) {\n      const value = this.ui.form.parse(config);\n      this.value = value;\n      return value;\n    }\n\n    if (this.ui.input) {\n      const input = this.ui.input;\n\n      try {\n        const value = this.ui.parse(this.idl, config, input.value);\n\n        if (!this.idl.covariant(value)) {\n          throw new Error(`${input.value} is not of type ${this.idl.display()}`);\n        }\n\n        this.status.style.display = 'none';\n        this.value = value;\n        return value;\n      } catch (err) {\n        input.classList.add('reject');\n        this.status.style.display = 'block';\n        this.status.innerHTML = 'InputError: ' + err.message;\n        this.value = undefined;\n        return undefined;\n      }\n    }\n\n    return null;\n  }\n\n  render(dom) {\n    const container = document.createElement('span');\n\n    if (this.label) {\n      const label = document.createElement('label');\n      label.innerText = this.label;\n      container.appendChild(label);\n    }\n\n    if (this.ui.input) {\n      container.appendChild(this.ui.input);\n      container.appendChild(this.status);\n    }\n\n    if (this.ui.form) {\n      this.ui.form.render(container);\n    }\n\n    dom.appendChild(container);\n  }\n\n}\nexport class InputForm {\n  constructor(ui) {\n    this.ui = ui;\n    this.form = [];\n  }\n\n  renderForm(dom) {\n    if (this.ui.container) {\n      this.form.forEach(e => e.render(this.ui.container));\n      dom.appendChild(this.ui.container);\n    } else {\n      this.form.forEach(e => e.render(dom));\n    }\n  }\n\n  render(dom) {\n    if (this.ui.open && this.ui.event) {\n      dom.appendChild(this.ui.open);\n      const form = this; // eslint-disable-next-line\n\n      form.ui.open.addEventListener(form.ui.event, () => {\n        // Remove old form\n        if (form.ui.container) {\n          form.ui.container.innerHTML = '';\n        } else {\n          const oldContainer = form.ui.open.nextElementSibling;\n\n          if (oldContainer) {\n            oldContainer.parentNode.removeChild(oldContainer);\n          }\n        } // Render form\n\n\n        form.generateForm();\n        form.renderForm(dom);\n      });\n    } else {\n      this.generateForm();\n      this.renderForm(dom);\n    }\n  }\n\n}\nexport class RecordForm extends InputForm {\n  constructor(fields, ui) {\n    super(ui);\n    this.fields = fields;\n    this.ui = ui;\n  }\n\n  generateForm() {\n    this.form = this.fields.map(([key, type]) => {\n      const input = this.ui.render(type); // eslint-disable-next-line\n\n      if (this.ui.labelMap && this.ui.labelMap.hasOwnProperty(key)) {\n        input.label = this.ui.labelMap[key] + ' ';\n      } else {\n        input.label = key + ' ';\n      }\n\n      return input;\n    });\n  }\n\n  parse(config) {\n    const v = {};\n    this.fields.forEach(([key, _], i) => {\n      const value = this.form[i].parse(config);\n      v[key] = value;\n    });\n\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n\n    return v;\n  }\n\n}\nexport class TupleForm extends InputForm {\n  constructor(components, ui) {\n    super(ui);\n    this.components = components;\n    this.ui = ui;\n  }\n\n  generateForm() {\n    this.form = this.components.map(type => {\n      const input = this.ui.render(type);\n      return input;\n    });\n  }\n\n  parse(config) {\n    const v = [];\n    this.components.forEach((_, i) => {\n      const value = this.form[i].parse(config);\n      v.push(value);\n    });\n\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n\n    return v;\n  }\n\n}\nexport class VariantForm extends InputForm {\n  constructor(fields, ui) {\n    super(ui);\n    this.fields = fields;\n    this.ui = ui;\n  }\n\n  generateForm() {\n    const index = this.ui.open.selectedIndex;\n    const [_, type] = this.fields[index];\n    const variant = this.ui.render(type);\n    this.form = [variant];\n  }\n\n  parse(config) {\n    const select = this.ui.open;\n    const selected = select.options[select.selectedIndex].value;\n    const value = this.form[0].parse(config);\n\n    if (value === undefined) {\n      return undefined;\n    }\n\n    const v = {};\n    v[selected] = value;\n    return v;\n  }\n\n}\nexport class OptionForm extends InputForm {\n  constructor(ty, ui) {\n    super(ui);\n    this.ty = ty;\n    this.ui = ui;\n  }\n\n  generateForm() {\n    if (this.ui.open.checked) {\n      const opt = this.ui.render(this.ty);\n      this.form = [opt];\n    } else {\n      this.form = [];\n    }\n  }\n\n  parse(config) {\n    if (this.form.length === 0) {\n      return [];\n    } else {\n      const value = this.form[0].parse(config);\n\n      if (value === undefined) {\n        return undefined;\n      }\n\n      return [value];\n    }\n  }\n\n}\nexport class VecForm extends InputForm {\n  constructor(ty, ui) {\n    super(ui);\n    this.ty = ty;\n    this.ui = ui;\n  }\n\n  generateForm() {\n    const len = +this.ui.open.value;\n    this.form = [];\n\n    for (let i = 0; i < len; i++) {\n      const t = this.ui.render(this.ty);\n      this.form.push(t);\n    }\n  }\n\n  parse(config) {\n    const value = this.form.map(input => {\n      return input.parse(config);\n    });\n\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n\n    return value;\n  }\n\n}","map":{"version":3,"sources":["../../src/candid-core.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export class InputBox {\n    constructor(idl, ui) {\n        this.idl = idl;\n        this.ui = ui;\n        this.label = null;\n        this.value = undefined;\n        const status = document.createElement('span');\n        status.className = 'status';\n        this.status = status;\n        if (ui.input) {\n            ui.input.addEventListener('blur', () => {\n                if (ui.input.value === '') {\n                    return;\n                }\n                this.parse();\n            });\n            ui.input.addEventListener('input', () => {\n                status.style.display = 'none';\n                ui.input.classList.remove('reject');\n            });\n        }\n    }\n    isRejected() {\n        return this.value === undefined;\n    }\n    parse(config = {}) {\n        if (this.ui.form) {\n            const value = this.ui.form.parse(config);\n            this.value = value;\n            return value;\n        }\n        if (this.ui.input) {\n            const input = this.ui.input;\n            try {\n                const value = this.ui.parse(this.idl, config, input.value);\n                if (!this.idl.covariant(value)) {\n                    throw new Error(`${input.value} is not of type ${this.idl.display()}`);\n                }\n                this.status.style.display = 'none';\n                this.value = value;\n                return value;\n            }\n            catch (err) {\n                input.classList.add('reject');\n                this.status.style.display = 'block';\n                this.status.innerHTML = 'InputError: ' + err.message;\n                this.value = undefined;\n                return undefined;\n            }\n        }\n        return null;\n    }\n    render(dom) {\n        const container = document.createElement('span');\n        if (this.label) {\n            const label = document.createElement('label');\n            label.innerText = this.label;\n            container.appendChild(label);\n        }\n        if (this.ui.input) {\n            container.appendChild(this.ui.input);\n            container.appendChild(this.status);\n        }\n        if (this.ui.form) {\n            this.ui.form.render(container);\n        }\n        dom.appendChild(container);\n    }\n}\nexport class InputForm {\n    constructor(ui) {\n        this.ui = ui;\n        this.form = [];\n    }\n    renderForm(dom) {\n        if (this.ui.container) {\n            this.form.forEach(e => e.render(this.ui.container));\n            dom.appendChild(this.ui.container);\n        }\n        else {\n            this.form.forEach(e => e.render(dom));\n        }\n    }\n    render(dom) {\n        if (this.ui.open && this.ui.event) {\n            dom.appendChild(this.ui.open);\n            const form = this;\n            // eslint-disable-next-line\n            form.ui.open.addEventListener(form.ui.event, () => {\n                // Remove old form\n                if (form.ui.container) {\n                    form.ui.container.innerHTML = '';\n                }\n                else {\n                    const oldContainer = form.ui.open.nextElementSibling;\n                    if (oldContainer) {\n                        oldContainer.parentNode.removeChild(oldContainer);\n                    }\n                }\n                // Render form\n                form.generateForm();\n                form.renderForm(dom);\n            });\n        }\n        else {\n            this.generateForm();\n            this.renderForm(dom);\n        }\n    }\n}\nexport class RecordForm extends InputForm {\n    constructor(fields, ui) {\n        super(ui);\n        this.fields = fields;\n        this.ui = ui;\n    }\n    generateForm() {\n        this.form = this.fields.map(([key, type]) => {\n            const input = this.ui.render(type);\n            // eslint-disable-next-line\n            if (this.ui.labelMap && this.ui.labelMap.hasOwnProperty(key)) {\n                input.label = this.ui.labelMap[key] + ' ';\n            }\n            else {\n                input.label = key + ' ';\n            }\n            return input;\n        });\n    }\n    parse(config) {\n        const v = {};\n        this.fields.forEach(([key, _], i) => {\n            const value = this.form[i].parse(config);\n            v[key] = value;\n        });\n        if (this.form.some(input => input.isRejected())) {\n            return undefined;\n        }\n        return v;\n    }\n}\nexport class TupleForm extends InputForm {\n    constructor(components, ui) {\n        super(ui);\n        this.components = components;\n        this.ui = ui;\n    }\n    generateForm() {\n        this.form = this.components.map(type => {\n            const input = this.ui.render(type);\n            return input;\n        });\n    }\n    parse(config) {\n        const v = [];\n        this.components.forEach((_, i) => {\n            const value = this.form[i].parse(config);\n            v.push(value);\n        });\n        if (this.form.some(input => input.isRejected())) {\n            return undefined;\n        }\n        return v;\n    }\n}\nexport class VariantForm extends InputForm {\n    constructor(fields, ui) {\n        super(ui);\n        this.fields = fields;\n        this.ui = ui;\n    }\n    generateForm() {\n        const index = this.ui.open.selectedIndex;\n        const [_, type] = this.fields[index];\n        const variant = this.ui.render(type);\n        this.form = [variant];\n    }\n    parse(config) {\n        const select = this.ui.open;\n        const selected = select.options[select.selectedIndex].value;\n        const value = this.form[0].parse(config);\n        if (value === undefined) {\n            return undefined;\n        }\n        const v = {};\n        v[selected] = value;\n        return v;\n    }\n}\nexport class OptionForm extends InputForm {\n    constructor(ty, ui) {\n        super(ui);\n        this.ty = ty;\n        this.ui = ui;\n    }\n    generateForm() {\n        if (this.ui.open.checked) {\n            const opt = this.ui.render(this.ty);\n            this.form = [opt];\n        }\n        else {\n            this.form = [];\n        }\n    }\n    parse(config) {\n        if (this.form.length === 0) {\n            return [];\n        }\n        else {\n            const value = this.form[0].parse(config);\n            if (value === undefined) {\n                return undefined;\n            }\n            return [value];\n        }\n    }\n}\nexport class VecForm extends InputForm {\n    constructor(ty, ui) {\n        super(ui);\n        this.ty = ty;\n        this.ui = ui;\n    }\n    generateForm() {\n        const len = +this.ui.open.value;\n        this.form = [];\n        for (let i = 0; i < len; i++) {\n            const t = this.ui.render(this.ty);\n            this.form.push(t);\n        }\n    }\n    parse(config) {\n        const value = this.form.map(input => {\n            return input.parse(config);\n        });\n        if (this.form.some(input => input.isRejected())) {\n            return undefined;\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=candid-core.js.map"]},"metadata":{},"sourceType":"module"}