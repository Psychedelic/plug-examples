{"ast":null,"code":"var _jsxFileName = \"/Users/tomasrocchi/Documents/fleek/plug-examples/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PlugConnect from '@psychedelic/plug-connect';\nimport { Principal } from '@dfinity/principal';\nimport { Actor } from '@dfinity/agent';\nimport interfaceFactory from './idls/xtc.did';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst XTC_CANISTER_ID = 'aanaa-xaaaa-aaaah-aaeiq-cai';\nexport const CYCLES_PER_TC = 1000000000000;\n\nfunction App() {\n  _s();\n\n  const [to, setTo] = useState();\n  const [amount, setAmount] = useState(0);\n  const [collection, setCollection] = useState('nbg4r-saaaa-aaaah-qap7a-cai');\n  const [connected, setConnected] = useState(false);\n  const [nftIndex, setNFTIndex] = useState(0);\n\n  const handleChangeTo = e => setTo(e.target.value);\n\n  const handleChangeAmount = e => setAmount(e.target.value);\n\n  const handleChangeCollection = e => setCollection(e.target.value);\n\n  const handleChangeIndex = e => setNFTIndex(e.target.value);\n\n  const safeXTCTransfer = async () => {\n    // create an actor to interact with XTC\n    const actor = await window.ic.plug.createActor({\n      canisterId: XTC_CANISTER_ID,\n      interfaceFactory\n    }); // request a transfer using this actor\n\n    const response = await actor.transfer({\n      to: Principal.fromText(to),\n      amount: BigInt(amount * CYCLES_PER_TC),\n      from: []\n    });\n    console.log('response', response);\n  };\n\n  const unsafeXTCTransfer = async () => {\n    const actor = await Actor.createActor(interfaceFactory, {\n      agent: window.ic.plug.agent,\n      canisterId: XTC_CANISTER_ID\n    });\n    const response = await actor.transfer({\n      to: Principal.fromText(to),\n      amount: BigInt(amount * CYCLES_PER_TC),\n      from: []\n    });\n    console.log('response', response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex column center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plug Examples\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Security Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plug-button\",\n      children: connected ? 'Connected to plug' : /*#__PURE__*/_jsxDEV(PlugConnect, {\n        dark: true,\n        onConnectCallback: () => setConnected(true),\n        whitelist: [XTC_CANISTER_ID]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), connected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"Recipient principal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"text\",\n          onChange: handleChangeTo,\n          value: to\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"Amount of XTC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"number\",\n          onChange: handleChangeAmount,\n          value: amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"NFT Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"text\",\n          onChange: handleChangeCollection,\n          value: collection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"NFT Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"number\",\n          onChange: handleChangeIndex,\n          value: nftIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Safe Calls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: safeXTCTransfer,\n          children: `Transfer ${amount} XTC (${CYCLES_PER_TC * amount} cycles)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: safeNFTTransfer,\n          children: `Transfer ${amount} XTC (${CYCLES_PER_TC * amount} cycles)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unsafe Calls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: unsafeXTCTransfer,\n          children: `Transfer 0.000001 XTC (1000 cycles)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"X6vmc/Ayerw59v5iFfBzH2kMlpE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tomasrocchi/Documents/fleek/plug-examples/src/App.js"],"names":["React","useEffect","useState","PlugConnect","Principal","Actor","interfaceFactory","XTC_CANISTER_ID","CYCLES_PER_TC","App","to","setTo","amount","setAmount","collection","setCollection","connected","setConnected","nftIndex","setNFTIndex","handleChangeTo","e","target","value","handleChangeAmount","handleChangeCollection","handleChangeIndex","safeXTCTransfer","actor","window","ic","plug","createActor","canisterId","response","transfer","fromText","BigInt","from","console","log","unsafeXTCTransfer","agent","safeNFTTransfer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PlugConnect from '@psychedelic/plug-connect';\nimport { Principal } from '@dfinity/principal';\nimport { Actor } from '@dfinity/agent';\n\nimport interfaceFactory from './idls/xtc.did';\nimport './App.css';\n\nconst XTC_CANISTER_ID = 'aanaa-xaaaa-aaaah-aaeiq-cai';\nexport const CYCLES_PER_TC = 1_000_000_000_000;\n\nfunction App() {\n  const [to, setTo] = useState();\n  const [amount, setAmount] = useState(0);\n  const [collection, setCollection] = useState('nbg4r-saaaa-aaaah-qap7a-cai');\n  const [connected, setConnected] = useState(false);\n  const [nftIndex, setNFTIndex] = useState(0);\n  \n  const handleChangeTo = e => setTo(e.target.value);\n  const handleChangeAmount = e => setAmount(e.target.value);\n  const handleChangeCollection = e => setCollection(e.target.value);\n  const handleChangeIndex = e => setNFTIndex(e.target.value);\n\n  const safeXTCTransfer = async () => {\n    // create an actor to interact with XTC\n    const actor = await window.ic.plug.createActor({ canisterId: XTC_CANISTER_ID, interfaceFactory });\n    // request a transfer using this actor\n    const response = await actor.transfer({ to: Principal.fromText(to), amount: BigInt(amount*CYCLES_PER_TC), from: [] });\n    console.log('response', response);\n  }\n\n  const unsafeXTCTransfer = async () => {\n    const actor = await Actor.createActor(interfaceFactory, {\n      agent: window.ic.plug.agent,\n      canisterId: XTC_CANISTER_ID,\n    });\n    const response = await actor.transfer({ to: Principal.fromText(to), amount: BigInt(amount*CYCLES_PER_TC), from: [] });\n    console.log('response', response);\n  }\n\n  return (\n    <div className=\"flex column center\">\n      <h1>Plug Examples</h1>\n      <h2>Security Example</h2>\n      <div className=\"plug-button\">\n        {connected ? 'Connected to plug' : <PlugConnect dark onConnectCallback={() => setConnected(true)} whitelist={[XTC_CANISTER_ID]} />}\n      </div>\n      {connected ? (\n      <>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">Recipient principal</label>\n          <input name=\"to\" type=\"text\" onChange={handleChangeTo} value={to} />\n        </div>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">Amount of XTC</label>\n          <input name=\"to\" type=\"number\" onChange={handleChangeAmount} value={amount} />\n        </div>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">NFT Collection</label>\n          <input name=\"to\" type=\"text\" onChange={handleChangeCollection} value={collection} />\n        </div>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">NFT Index</label>\n          <input name=\"to\" type=\"number\" onChange={handleChangeIndex} value={nftIndex} />\n        </div>\n        <div className=\"security-actions-container\">\n          <h3>Safe Calls</h3>\n          <button type=\"button\" onClick={safeXTCTransfer}>{`Transfer ${amount} XTC (${CYCLES_PER_TC * amount} cycles)`}</button>\n          <button type=\"button\" onClick={safeNFTTransfer}>{`Transfer ${amount} XTC (${CYCLES_PER_TC * amount} cycles)`}</button>\n          {/* <button type=\"button\" onClick={unsafeICPTransfer}>Transfer 0.01 ICP</button>\n          <button type=\"button\" onClick={unsafeNFTTransfer}>Transfer NFT</button> */}\n        </div>\n        <div className=\"security-actions-container\">\n          <h3>Unsafe Calls</h3>\n          <button type=\"button\" onClick={unsafeXTCTransfer}>{`Transfer 0.000001 XTC (1000 cycles)`}</button>\n          {/* <button type=\"button\" onClick={safeXTCTransfer}>{`Transfer ${amount} XTC (${CYCLES_PER_TC * amount} cycles)`}</button> */}\n          {/* <button type=\"button\" onClick={unsafeICPTransfer}>Transfer 0.01 ICP</button>\n          <button type=\"button\" onClick={unsafeNFTTransfer}>Transfer NFT</button> */}\n        </div>\n      </>\n      ) : ''}\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}