{"ast":null,"code":"export default(function(_ref){var IDL=_ref.IDL;var SetAuthorizedSubnetworkListArgs=IDL.Record({'who':IDL.Opt(IDL.Principal),'subnets':IDL.Vec(IDL.Principal)});var ICPTs=IDL.Record({'e8s':IDL.Nat64});var TransactionNotification=IDL.Record({'to':IDL.Principal,'to_subaccount':IDL.Opt(IDL.Vec(IDL.Nat8)),'from':IDL.Principal,'memo':IDL.Nat64,'from_subaccount':IDL.Opt(IDL.Vec(IDL.Nat8)),'amount':ICPTs,'block_height':IDL.Nat64});var CyclesResponse=IDL.Variant({'Refunded':IDL.Tuple(IDL.Text,IDL.Opt(IDL.Nat64)),'CanisterCreated':IDL.Principal,'ToppedUp':IDL.Null});var Result=IDL.Variant({'Ok':CyclesResponse,'Err':IDL.Text});return IDL.Service({'set_authorized_subnetwork_list':IDL.Func([SetAuthorizedSubnetworkListArgs],[],[]),'transaction_notification':IDL.Func([TransactionNotification],[Result],[])});});export var init=function init(_ref2){var IDL=_ref2.IDL;return[];};","map":{"version":3,"sources":["/Users/tomasrocchi/Documents/fleek/plug-examples/src/idls/nns-minting.did.js"],"names":["IDL","SetAuthorizedSubnetworkListArgs","Record","Opt","Principal","Vec","ICPTs","Nat64","TransactionNotification","Nat8","CyclesResponse","Variant","Tuple","Text","Null","Result","Service","Func","init"],"mappings":"AAAA,eAAe,cAAa,IAAVA,CAAAA,GAAU,MAAVA,GAAU,CAC1B,GAAMC,CAAAA,+BAA+B,CAAGD,GAAG,CAACE,MAAJ,CAAW,CACjD,MAAQF,GAAG,CAACG,GAAJ,CAAQH,GAAG,CAACI,SAAZ,CADyC,CAEjD,UAAYJ,GAAG,CAACK,GAAJ,CAAQL,GAAG,CAACI,SAAZ,CAFqC,CAAX,CAAxC,CAIA,GAAME,CAAAA,KAAK,CAAGN,GAAG,CAACE,MAAJ,CAAW,CAAE,MAAQF,GAAG,CAACO,KAAd,CAAX,CAAd,CACA,GAAMC,CAAAA,uBAAuB,CAAGR,GAAG,CAACE,MAAJ,CAAW,CACzC,KAAOF,GAAG,CAACI,SAD8B,CAEzC,gBAAkBJ,GAAG,CAACG,GAAJ,CAAQH,GAAG,CAACK,GAAJ,CAAQL,GAAG,CAACS,IAAZ,CAAR,CAFuB,CAGzC,OAAST,GAAG,CAACI,SAH4B,CAIzC,OAASJ,GAAG,CAACO,KAJ4B,CAKzC,kBAAoBP,GAAG,CAACG,GAAJ,CAAQH,GAAG,CAACK,GAAJ,CAAQL,GAAG,CAACS,IAAZ,CAAR,CALqB,CAMzC,SAAWH,KAN8B,CAOzC,eAAiBN,GAAG,CAACO,KAPoB,CAAX,CAAhC,CASA,GAAMG,CAAAA,cAAc,CAAGV,GAAG,CAACW,OAAJ,CAAY,CACjC,WAAaX,GAAG,CAACY,KAAJ,CAAUZ,GAAG,CAACa,IAAd,CAAoBb,GAAG,CAACG,GAAJ,CAAQH,GAAG,CAACO,KAAZ,CAApB,CADoB,CAEjC,kBAAoBP,GAAG,CAACI,SAFS,CAGjC,WAAaJ,GAAG,CAACc,IAHgB,CAAZ,CAAvB,CAKA,GAAMC,CAAAA,MAAM,CAAGf,GAAG,CAACW,OAAJ,CAAY,CAAE,KAAOD,cAAT,CAAyB,MAAQV,GAAG,CAACa,IAArC,CAAZ,CAAf,CACA,MAAOb,CAAAA,GAAG,CAACgB,OAAJ,CAAY,CACjB,iCAAmChB,GAAG,CAACiB,IAAJ,CAC/B,CAAChB,+BAAD,CAD+B,CAE/B,EAF+B,CAG/B,EAH+B,CADlB,CAMjB,2BAA6BD,GAAG,CAACiB,IAAJ,CACzB,CAACT,uBAAD,CADyB,CAEzB,CAACO,MAAD,CAFyB,CAGzB,EAHyB,CANZ,CAAZ,CAAP,CAYD,CAjCD,EAkCA,MAAO,IAAMG,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,OAAa,IAAVlB,CAAAA,GAAU,OAAVA,GAAU,CAAE,MAAO,EAAP,CAAY,CAAxC","sourcesContent":["export default ({ IDL }) => {\n  const SetAuthorizedSubnetworkListArgs = IDL.Record({\n    'who' : IDL.Opt(IDL.Principal),\n    'subnets' : IDL.Vec(IDL.Principal),\n  });\n  const ICPTs = IDL.Record({ 'e8s' : IDL.Nat64 });\n  const TransactionNotification = IDL.Record({\n    'to' : IDL.Principal,\n    'to_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'from' : IDL.Principal,\n    'memo' : IDL.Nat64,\n    'from_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'amount' : ICPTs,\n    'block_height' : IDL.Nat64,\n  });\n  const CyclesResponse = IDL.Variant({\n    'Refunded' : IDL.Tuple(IDL.Text, IDL.Opt(IDL.Nat64)),\n    'CanisterCreated' : IDL.Principal,\n    'ToppedUp' : IDL.Null,\n  });\n  const Result = IDL.Variant({ 'Ok' : CyclesResponse, 'Err' : IDL.Text });\n  return IDL.Service({\n    'set_authorized_subnetwork_list' : IDL.Func(\n        [SetAuthorizedSubnetworkListArgs],\n        [],\n        [],\n      ),\n    'transaction_notification' : IDL.Func(\n        [TransactionNotification],\n        [Result],\n        [],\n      ),\n  });\n};\nexport const init = ({ IDL }) => { return []; };"]},"metadata":{},"sourceType":"module"}