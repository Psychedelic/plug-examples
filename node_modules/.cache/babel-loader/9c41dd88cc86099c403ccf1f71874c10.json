{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _get = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _slicedToArray = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/tomasrocchi/Documents/fleek/plug-examples/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar cbor = __importStar(require(\"./value\"));\n\nvar BufferClasses = [ArrayBuffer, Uint8Array, Uint16Array, Uint32Array, Int8Array, Int16Array, Int32Array, Float32Array, Float64Array];\n\nvar JsonDefaultCborEncoder = /*#__PURE__*/function () {\n  // @param _serializer The CBOR Serializer to use.\n  // @param _stable Whether or not keys from objects should be sorted (stable). This is\n  //     particularly useful when testing encodings between JSON objects.\n  function JsonDefaultCborEncoder(_serializer) {\n    var _stable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    _classCallCheck(this, JsonDefaultCborEncoder);\n\n    this._serializer = _serializer;\n    this._stable = _stable;\n    this.name = \"jsonDefault\";\n    this.priority = -100;\n  }\n\n  _createClass(JsonDefaultCborEncoder, [{\n    key: \"match\",\n    value: function match(value) {\n      return [\"undefined\", \"boolean\", \"number\", \"string\", \"object\"].indexOf(typeof value) != -1;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(value) {\n      var _this = this;\n\n      switch (typeof value) {\n        case \"undefined\":\n          return cbor.undefined_();\n\n        case \"boolean\":\n          return cbor.bool(value);\n\n        case \"number\":\n          if (Math.floor(value) === value) {\n            return cbor.number(value);\n          } else {\n            return cbor.doubleFloat(value);\n          }\n\n        case \"string\":\n          return cbor.string(value);\n\n        case \"object\":\n          if (value === null) {\n            return cbor.null_();\n          } else if (Array.isArray(value)) {\n            return cbor.array(value.map(function (x) {\n              return _this._serializer.serializeValue(x);\n            }));\n          } else if (BufferClasses.find(function (x) {\n            return value instanceof x;\n          })) {\n            return cbor.bytes(value.buffer);\n          } else if (Object.getOwnPropertyNames(value).indexOf(\"toJSON\") !== -1) {\n            return this.encode(value.toJSON());\n          } else if (value instanceof Map) {\n            var m = new Map();\n\n            var _iterator = _createForOfIteratorHelper(value.entries()),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var _step$value = _slicedToArray(_step.value, 2),\n                    key = _step$value[0],\n                    item = _step$value[1];\n\n                m.set(key, this._serializer.serializeValue(item));\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            return cbor.map(m, this._stable);\n          } else {\n            var _m = new Map();\n\n            for (var _i = 0, _Object$entries = Object.entries(value); _i < _Object$entries.length; _i++) {\n              var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n                  _key = _Object$entries$_i[0],\n                  _item = _Object$entries$_i[1];\n\n              _m.set(_key, this._serializer.serializeValue(_item));\n            }\n\n            return cbor.map(_m, this._stable);\n          }\n\n        default:\n          throw new Error(\"Invalid value.\");\n      }\n    }\n  }]);\n\n  return JsonDefaultCborEncoder;\n}();\n\nexports.JsonDefaultCborEncoder = JsonDefaultCborEncoder;\n\nvar ToCborEncoder = /*#__PURE__*/function () {\n  function ToCborEncoder() {\n    _classCallCheck(this, ToCborEncoder);\n\n    this.name = \"cborEncoder\";\n    this.priority = -90;\n  }\n\n  _createClass(ToCborEncoder, [{\n    key: \"match\",\n    value: function match(value) {\n      return typeof value == \"object\" && typeof value[\"toCBOR\"] == \"function\";\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(value) {\n      return value.toCBOR();\n    }\n  }]);\n\n  return ToCborEncoder;\n}();\n\nexports.ToCborEncoder = ToCborEncoder;\n\nvar CborSerializer = /*#__PURE__*/function () {\n  function CborSerializer() {\n    _classCallCheck(this, CborSerializer);\n\n    this._encoders = new Set();\n  }\n\n  _createClass(CborSerializer, [{\n    key: \"removeEncoder\",\n    value: function removeEncoder(name) {\n      // Has to make an extra call to values() to ensure it doesn't break on iteration.\n      var _iterator2 = _createForOfIteratorHelper(this._encoders.values()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var encoder = _step2.value;\n\n          if (encoder.name == name) {\n            this._encoders.delete(encoder);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"addEncoder\",\n    value: function addEncoder(encoder) {\n      this._encoders.add(encoder);\n    }\n  }, {\n    key: \"getEncoderFor\",\n    value: function getEncoderFor(value) {\n      var chosenEncoder = null;\n\n      var _iterator3 = _createForOfIteratorHelper(this._encoders),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var encoder = _step3.value;\n\n          if (!chosenEncoder || encoder.priority > chosenEncoder.priority) {\n            if (encoder.match(value)) {\n              chosenEncoder = encoder;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (chosenEncoder === null) {\n        throw new Error(\"Could not find an encoder for value.\");\n      }\n\n      return chosenEncoder;\n    }\n  }, {\n    key: \"serializeValue\",\n    value: function serializeValue(value) {\n      return this.getEncoderFor(value).encode(value);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(value) {\n      return this.serializeValue(value);\n    }\n  }], [{\n    key: \"withDefaultEncoders\",\n    value: function withDefaultEncoders() {\n      var stable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var s = new this();\n      s.addEncoder(new JsonDefaultCborEncoder(s, stable));\n      s.addEncoder(new ToCborEncoder());\n      return s;\n    }\n  }]);\n\n  return CborSerializer;\n}();\n\nexports.CborSerializer = CborSerializer;\n\nvar SelfDescribeCborSerializer = /*#__PURE__*/function (_CborSerializer) {\n  _inherits(SelfDescribeCborSerializer, _CborSerializer);\n\n  var _super = _createSuper(SelfDescribeCborSerializer);\n\n  function SelfDescribeCborSerializer() {\n    _classCallCheck(this, SelfDescribeCborSerializer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelfDescribeCborSerializer, [{\n    key: \"serialize\",\n    value: function serialize(value) {\n      return cbor.raw(new Uint8Array([].concat(_toConsumableArray(new Uint8Array([0xd9, 0xd9, 0xf7])), _toConsumableArray(new Uint8Array(_get(_getPrototypeOf(SelfDescribeCborSerializer.prototype), \"serializeValue\", this).call(this, value))))));\n    }\n  }]);\n\n  return SelfDescribeCborSerializer;\n}(CborSerializer);\n\nexports.SelfDescribeCborSerializer = SelfDescribeCborSerializer;","map":{"version":3,"sources":["serializer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cbor = __importStar(require(\"./value\"));\nconst BufferClasses = [\n    ArrayBuffer,\n    Uint8Array,\n    Uint16Array,\n    Uint32Array,\n    Int8Array,\n    Int16Array,\n    Int32Array,\n    Float32Array,\n    Float64Array,\n];\nclass JsonDefaultCborEncoder {\n    // @param _serializer The CBOR Serializer to use.\n    // @param _stable Whether or not keys from objects should be sorted (stable). This is\n    //     particularly useful when testing encodings between JSON objects.\n    constructor(_serializer, _stable = false) {\n        this._serializer = _serializer;\n        this._stable = _stable;\n        this.name = \"jsonDefault\";\n        this.priority = -100;\n    }\n    match(value) {\n        return [\"undefined\", \"boolean\", \"number\", \"string\", \"object\"].indexOf(typeof value) != -1;\n    }\n    encode(value) {\n        switch (typeof value) {\n            case \"undefined\":\n                return cbor.undefined_();\n            case \"boolean\":\n                return cbor.bool(value);\n            case \"number\":\n                if (Math.floor(value) === value) {\n                    return cbor.number(value);\n                }\n                else {\n                    return cbor.doubleFloat(value);\n                }\n            case \"string\":\n                return cbor.string(value);\n            case \"object\":\n                if (value === null) {\n                    return cbor.null_();\n                }\n                else if (Array.isArray(value)) {\n                    return cbor.array(value.map((x) => this._serializer.serializeValue(x)));\n                }\n                else if (BufferClasses.find((x) => value instanceof x)) {\n                    return cbor.bytes(value.buffer);\n                }\n                else if (Object.getOwnPropertyNames(value).indexOf(\"toJSON\") !== -1) {\n                    return this.encode(value.toJSON());\n                }\n                else if (value instanceof Map) {\n                    const m = new Map();\n                    for (const [key, item] of value.entries()) {\n                        m.set(key, this._serializer.serializeValue(item));\n                    }\n                    return cbor.map(m, this._stable);\n                }\n                else {\n                    const m = new Map();\n                    for (const [key, item] of Object.entries(value)) {\n                        m.set(key, this._serializer.serializeValue(item));\n                    }\n                    return cbor.map(m, this._stable);\n                }\n            default:\n                throw new Error(\"Invalid value.\");\n        }\n    }\n}\nexports.JsonDefaultCborEncoder = JsonDefaultCborEncoder;\nclass ToCborEncoder {\n    constructor() {\n        this.name = \"cborEncoder\";\n        this.priority = -90;\n    }\n    match(value) {\n        return typeof value == \"object\" && typeof value[\"toCBOR\"] == \"function\";\n    }\n    encode(value) {\n        return value.toCBOR();\n    }\n}\nexports.ToCborEncoder = ToCborEncoder;\nclass CborSerializer {\n    constructor() {\n        this._encoders = new Set();\n    }\n    static withDefaultEncoders(stable = false) {\n        const s = new this();\n        s.addEncoder(new JsonDefaultCborEncoder(s, stable));\n        s.addEncoder(new ToCborEncoder());\n        return s;\n    }\n    removeEncoder(name) {\n        // Has to make an extra call to values() to ensure it doesn't break on iteration.\n        for (const encoder of this._encoders.values()) {\n            if (encoder.name == name) {\n                this._encoders.delete(encoder);\n            }\n        }\n    }\n    addEncoder(encoder) {\n        this._encoders.add(encoder);\n    }\n    getEncoderFor(value) {\n        let chosenEncoder = null;\n        for (const encoder of this._encoders) {\n            if (!chosenEncoder || encoder.priority > chosenEncoder.priority) {\n                if (encoder.match(value)) {\n                    chosenEncoder = encoder;\n                }\n            }\n        }\n        if (chosenEncoder === null) {\n            throw new Error(\"Could not find an encoder for value.\");\n        }\n        return chosenEncoder;\n    }\n    serializeValue(value) {\n        return this.getEncoderFor(value).encode(value);\n    }\n    serialize(value) {\n        return this.serializeValue(value);\n    }\n}\nexports.CborSerializer = CborSerializer;\nclass SelfDescribeCborSerializer extends CborSerializer {\n    serialize(value) {\n        return cbor.raw(new Uint8Array([\n            // Self describe CBOR.\n            ...new Uint8Array([0xd9, 0xd9, 0xf7]),\n            ...new Uint8Array(super.serializeValue(value)),\n        ]));\n    }\n}\nexports.SelfDescribeCborSerializer = SelfDescribeCborSerializer;\n//# sourceMappingURL=serializer.js.map"]},"metadata":{},"sourceType":"script"}