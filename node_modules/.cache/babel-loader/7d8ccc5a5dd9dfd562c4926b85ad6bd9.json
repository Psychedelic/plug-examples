{"ast":null,"code":"var _jsxFileName = \"/Users/tomasrocchi/Documents/fleek/plug-examples/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PlugConnect from '@psychedelic/plug-connect';\nimport interfaceFactory from './idls/xtc.did';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst XTC_CANISTER_ID = 'aanaa-xaaaa-aaaah-aaeiq-cai';\nexport const CYCLES_PER_TC = 1000000000000;\n\nfunction App() {\n  _s();\n\n  const [to, setTo] = useState();\n  const [amount, setAmount] = useState();\n  const [connected, setConnected] = useState(false);\n\n  const handleChangeTo = e => setTo(e.target.value);\n\n  const handleChangeAmount = e => setAmount(e.target.value);\n\n  console.log(window.ic.plug);\n\n  const safeXTCTransfer = async () => {\n    console.log('safe', XTC_CANISTER_ID, xtcDid, window.ic.createActor); // create an actor to interact with XTC\n\n    const actor = await window.ic.plug.createActor({\n      canisterId: XTC_CANISTER_ID,\n      interfaceFactory\n    }); // request a transfer using this actor\n\n    const response = await actor.transferErc20(to, amount * CYCLES_PER_TC);\n    console.log(response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex column center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plug Examples\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Security Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plug-button\",\n      children: connected ? 'Connected to plug' : /*#__PURE__*/_jsxDEV(PlugConnect, {\n        dark: true,\n        onConnectCallback: () => setConnected(true),\n        whitelist: [XTC_CANISTER_ID]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), connected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"Specify recipient principal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"text\",\n          onChange: handleChangeTo,\n          value: to\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"Specify amount of XTC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"number\",\n          onChange: handleChangeAmount,\n          value: amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Safe Calls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: safeXTCTransfer,\n          children: \"Transfer 0.1 XTC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h/DLSmMU7TARZGEHdnvOTqU3DOQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tomasrocchi/Documents/fleek/plug-examples/src/App.js"],"names":["React","useEffect","useState","PlugConnect","interfaceFactory","XTC_CANISTER_ID","CYCLES_PER_TC","App","to","setTo","amount","setAmount","connected","setConnected","handleChangeTo","e","target","value","handleChangeAmount","console","log","window","ic","plug","safeXTCTransfer","xtcDid","createActor","actor","canisterId","response","transferErc20"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PlugConnect from '@psychedelic/plug-connect';\n\nimport interfaceFactory from './idls/xtc.did';\nimport './App.css';\n\nconst XTC_CANISTER_ID = 'aanaa-xaaaa-aaaah-aaeiq-cai';\nexport const CYCLES_PER_TC = 1_000_000_000_000;\n\nfunction App() {\n  const [to, setTo] = useState();\n  const [amount, setAmount] = useState();\n  const [connected, setConnected] = useState(false);\n  \n  const handleChangeTo = e => setTo(e.target.value);\n  const handleChangeAmount = e => setAmount(e.target.value);\n\n  console.log(window.ic.plug);\n  const safeXTCTransfer = async () => {\n    console.log('safe', XTC_CANISTER_ID, xtcDid, window.ic.createActor);\n    // create an actor to interact with XTC\n    const actor = await window.ic.plug.createActor({ canisterId: XTC_CANISTER_ID, interfaceFactory });\n\n    // request a transfer using this actor\n    const response = await actor.transferErc20(to, amount*CYCLES_PER_TC);\n    console.log(response);\n  }\n\n  return (\n    <div className=\"flex column center\">\n      <h1>Plug Examples</h1>\n      <h2>Security Example</h2>\n      <div className=\"plug-button\">\n        {connected ? 'Connected to plug' : <PlugConnect dark onConnectCallback={() => setConnected(true)} whitelist={[XTC_CANISTER_ID]} />}\n      </div>\n      {connected ? (\n      <>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">Specify recipient principal</label>\n          <input name=\"to\" type=\"text\" onChange={handleChangeTo} value={to} />\n        </div>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">Specify amount of XTC</label>\n          <input name=\"to\" type=\"number\" onChange={handleChangeAmount} value={amount} />\n        </div>\n        <div className=\"security-actions-container\">\n          <h3>Safe Calls</h3>\n          <button type=\"button\" onClick={safeXTCTransfer}>Transfer 0.1 XTC</button>\n          {/* <button type=\"button\" onClick={unsafeICPTransfer}>Transfer 0.01 ICP</button>\n          <button type=\"button\" onClick={unsafeNFTTransfer}>Transfer NFT</button> */}\n        </div>\n      </>\n      ) : ''}\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}