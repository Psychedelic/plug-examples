{"ast":null,"code":"export default(function(_ref){var IDL=_ref.IDL;var TokenIndex=IDL.Nat32;var AccountIdentifier=IDL.Text;var TokenIdentifier=IDL.Text;var Balance=IDL.Nat;var Time=IDL.Int;var SubAccount=IDL.Vec(IDL.Nat8);var Memo=IDL.Vec(IDL.Nat8);var Listing=IDL.Record({locked:IDL.Opt(Time),seller:IDL.Principal,price:IDL.Nat64});var User=IDL.Variant({principal:IDL.Principal,address:AccountIdentifier});var CommonError=IDL.Variant({InvalidToken:TokenIdentifier,Other:IDL.Text});var BalanceRequest=IDL.Record({token:TokenIdentifier,user:User});var BalanceResult=IDL.Variant({ok:Balance,err:CommonError});var DetailsResult=IDL.Variant({ok:IDL.Tuple(AccountIdentifier,IDL.Opt(Listing)),err:CommonError});var TokensResult=IDL.Variant({ok:IDL.Vec(TokenIndex),err:CommonError});var TokenExtResult=IDL.Variant({ok:IDL.Vec(IDL.Tuple(TokenIndex,IDL.Opt(Listing),IDL.Opt(IDL.Vec(IDL.Nat8)))),err:CommonError});var TransferRequest=IDL.Record({to:User,token:TokenIdentifier,notify:IDL.Bool,from:User,memo:Memo,subaccount:IDL.Opt(SubAccount),amount:Balance});var TransferResult=IDL.Variant({ok:Balance,err:IDL.Variant({CannotNotify:AccountIdentifier,InsufficientBalance:IDL.Null,InvalidToken:TokenIdentifier,Rejected:IDL.Null,Unauthorized:AccountIdentifier,Other:IDL.Text})});var Metadata=IDL.Variant({fungible:IDL.Record({decimals:IDL.Nat8,metadata:IDL.Opt(IDL.Vec(IDL.Nat8)),name:IDL.Text,symbol:IDL.Text}),nonfungible:IDL.Record({metadata:IDL.Opt(IDL.Vec(IDL.Nat8))})});var MetadataResult=IDL.Variant({ok:Metadata,err:CommonError});return IDL.Service({balance:IDL.Func([BalanceRequest],[BalanceResult],['query']),details:IDL.Func([TokenIdentifier],[DetailsResult],['query']),tokens:IDL.Func([AccountIdentifier],[TokensResult],['query']),tokens_ext:IDL.Func([AccountIdentifier],[TokenExtResult],[]),transfer:IDL.Func([TransferRequest],[TransferResult],[]),metadata:IDL.Func([TokenIdentifier],[MetadataResult],['query'])});});export var init=function init(){return[];};","map":{"version":3,"sources":["/Users/tomasrocchi/Documents/fleek/plug-examples/src/idls/ext.did.js"],"names":["IDL","TokenIndex","Nat32","AccountIdentifier","Text","TokenIdentifier","Balance","Nat","Time","Int","SubAccount","Vec","Nat8","Memo","Listing","Record","locked","Opt","seller","Principal","price","Nat64","User","Variant","principal","address","CommonError","InvalidToken","Other","BalanceRequest","token","user","BalanceResult","ok","err","DetailsResult","Tuple","TokensResult","TokenExtResult","TransferRequest","to","notify","Bool","from","memo","subaccount","amount","TransferResult","CannotNotify","InsufficientBalance","Null","Rejected","Unauthorized","Metadata","fungible","decimals","metadata","name","symbol","nonfungible","MetadataResult","Service","balance","Func","details","tokens","tokens_ext","transfer","init"],"mappings":"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","sourcesContent":["export default ({ IDL }) => {\n  const TokenIndex = IDL.Nat32;\n  const AccountIdentifier = IDL.Text;\n  const TokenIdentifier = IDL.Text;\n  const Balance = IDL.Nat;\n  const Time = IDL.Int;\n  const SubAccount = IDL.Vec(IDL.Nat8);\n  const Memo = IDL.Vec(IDL.Nat8);\n  const Listing = IDL.Record({\n    locked: IDL.Opt(Time),\n    seller: IDL.Principal,\n    price: IDL.Nat64,\n  });\n  const User = IDL.Variant({\n    principal: IDL.Principal,\n    address: AccountIdentifier,\n  });\n  const CommonError = IDL.Variant({\n    InvalidToken: TokenIdentifier,\n    Other: IDL.Text,\n  });\n\n  const BalanceRequest = IDL.Record({\n    token: TokenIdentifier,\n    user: User,\n  });\n  const BalanceResult = IDL.Variant({ ok: Balance, err: CommonError });\n\n  const DetailsResult = IDL.Variant({\n    ok: IDL.Tuple(AccountIdentifier, IDL.Opt(Listing)),\n    err: CommonError,\n  });\n\n  const TokensResult = IDL.Variant({\n    ok: IDL.Vec(TokenIndex),\n    err: CommonError,\n  });\n  const TokenExtResult = IDL.Variant({\n    ok: IDL.Vec(\n      IDL.Tuple(TokenIndex, IDL.Opt(Listing), IDL.Opt(IDL.Vec(IDL.Nat8)))\n    ),\n    err: CommonError,\n  });\n\n  const TransferRequest = IDL.Record({\n    to: User,\n    token: TokenIdentifier,\n    notify: IDL.Bool,\n    from: User,\n    memo: Memo,\n    subaccount: IDL.Opt(SubAccount),\n    amount: Balance,\n  });\n  const TransferResult = IDL.Variant({\n    ok: Balance,\n    err: IDL.Variant({\n      CannotNotify: AccountIdentifier,\n      InsufficientBalance: IDL.Null,\n      InvalidToken: TokenIdentifier,\n      Rejected: IDL.Null,\n      Unauthorized: AccountIdentifier,\n      Other: IDL.Text,\n    }),\n  });\n  const Metadata = IDL.Variant({\n    fungible: IDL.Record({\n      decimals: IDL.Nat8,\n      metadata: IDL.Opt(IDL.Vec(IDL.Nat8)),\n      name: IDL.Text,\n      symbol: IDL.Text,\n    }),\n    nonfungible: IDL.Record({ metadata: IDL.Opt(IDL.Vec(IDL.Nat8)) }),\n  });\n  const MetadataResult = IDL.Variant({ ok: Metadata, err: CommonError });\n  return IDL.Service({\n    balance: IDL.Func([BalanceRequest], [BalanceResult], ['query']),\n    details: IDL.Func([TokenIdentifier], [DetailsResult], ['query']),\n    tokens: IDL.Func([AccountIdentifier], [TokensResult], ['query']),\n    tokens_ext: IDL.Func([AccountIdentifier], [TokenExtResult], []),\n    transfer: IDL.Func([TransferRequest], [TransferResult], []),\n    metadata: IDL.Func([TokenIdentifier], [MetadataResult], ['query']),\n  });\n};\nexport const init = () => {\n  return [];\n};\n"]},"metadata":{},"sourceType":"module"}