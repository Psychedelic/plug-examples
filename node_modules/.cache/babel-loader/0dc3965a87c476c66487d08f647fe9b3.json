{"ast":null,"code":"var _jsxFileName = \"/Users/tomasrocchi/Documents/fleek/plug-examples/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PlugConnect from '@psychedelic/plug-connect';\nimport { Principal } from '@dfinity/principal';\nimport { Actor } from '@dfinity/agent';\nimport XtcIDL from './idls/xtc.did';\nimport ExtIDL from './idls/ext.did';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst XTC_CANISTER_ID = 'aanaa-xaaaa-aaaah-aaeiq-cai';\nconst STARVERSE_CID = 'nbg4r-saaaa-aaaah-qap7a-cai';\nexport const CYCLES_PER_TC = 1000000000000;\nexport const to32bits = num => {\n  const b = new ArrayBuffer(4);\n  new DataView(b).setUint32(0, num);\n  return Array.from(new Uint8Array(b));\n};\n\nconst getTokenIdentifier = (canister, index) => {\n  const padding = Buffer.from('\\x0Atid');\n  const array = new Uint8Array([...padding, ...Principal.fromText(canister).toUint8Array(), ...to32bits(index)]);\n  return Principal.fromUint8Array(array).toText();\n};\n\nfunction App() {\n  _s();\n\n  const [to, setTo] = useState();\n  const [amount, setAmount] = useState(0);\n  const [connected, setConnected] = useState(false);\n  const [nftIndex, setNFTIndex] = useState(0);\n\n  const handleChangeTo = e => setTo(e.target.value);\n\n  const handleChangeAmount = e => setAmount(e.target.value);\n\n  const handleChangeIndex = e => setNFTIndex(e.target.value);\n\n  const safeXTCTransfer = async () => {\n    // create an actor to interact with XTC\n    const actor = await window.ic.plug.createActor({\n      canisterId: XTC_CANISTER_ID,\n      interfaceFactory: XtcIDL\n    }); // request a transfer using this actor\n\n    const response = await actor.transfer({\n      to: Principal.fromText(to),\n      amount: BigInt(amount * CYCLES_PER_TC),\n      from: []\n    });\n    console.log('response', response);\n  };\n\n  const unsafeXTCTransfer = async () => {\n    const actor = await Actor.createActor(XtcIDL, {\n      agent: window.ic.plug.agent,\n      canisterId: XTC_CANISTER_ID\n    });\n    const response = await actor.transfer({\n      to: Principal.fromText(to),\n      amount: BigInt(amount * CYCLES_PER_TC),\n      from: []\n    });\n    console.log('response', response);\n  };\n\n  const safeNFTTransfer = async () => {\n    // create an actor to interact with XTC\n    const actor = await window.ic.plug.createActor({\n      canisterId: STARVERSE_CID,\n      interfaceFactory: ExtIDL\n    }); // request a transfer using this actor\n\n    const response = await actor.transfer({\n      to: {\n        principal: Principal.from(to)\n      },\n      from: {\n        principal: await window.ic.plug.agent.getPrincipal()\n      },\n      token: getTokenIdentifier(STARVERSE_CID, nftIndex),\n      amount: BigInt(1),\n      memo: new Array(32).fill(0),\n      notify: false,\n      subaccount: []\n    });\n    console.log('response', response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex column center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plug Examples\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Security Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plug-button\",\n      children: connected ? 'Connected to plug' : /*#__PURE__*/_jsxDEV(PlugConnect, {\n        dark: true,\n        onConnectCallback: () => setConnected(true),\n        whitelist: [XTC_CANISTER_ID]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), connected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"Recipient principal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"text\",\n          onChange: handleChangeTo,\n          value: to\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"Amount of XTC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"number\",\n          onChange: handleChangeAmount,\n          value: amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex column input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"Starverse Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"to\",\n          type: \"number\",\n          onChange: handleChangeIndex,\n          value: nftIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-actions-container flex column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Safe Calls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: safeXTCTransfer,\n          children: `Transfer ${amount} XTC (${CYCLES_PER_TC * amount} cycles)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: safeNFTTransfer,\n          children: `Transfer Starverse #${nftIndex}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unsafe Calls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: unsafeXTCTransfer,\n          children: `Transfer 0.000001 XTC (1000 cycles)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oDeuOJiRb/8CFKM79sjN0w3YjhQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tomasrocchi/Documents/fleek/plug-examples/src/App.js"],"names":["React","useEffect","useState","PlugConnect","Principal","Actor","XtcIDL","ExtIDL","XTC_CANISTER_ID","STARVERSE_CID","CYCLES_PER_TC","to32bits","num","b","ArrayBuffer","DataView","setUint32","Array","from","Uint8Array","getTokenIdentifier","canister","index","padding","Buffer","array","fromText","toUint8Array","fromUint8Array","toText","App","to","setTo","amount","setAmount","connected","setConnected","nftIndex","setNFTIndex","handleChangeTo","e","target","value","handleChangeAmount","handleChangeIndex","safeXTCTransfer","actor","window","ic","plug","createActor","canisterId","interfaceFactory","response","transfer","BigInt","console","log","unsafeXTCTransfer","agent","safeNFTTransfer","principal","getPrincipal","token","memo","fill","notify","subaccount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PlugConnect from '@psychedelic/plug-connect';\nimport { Principal } from '@dfinity/principal';\nimport { Actor } from '@dfinity/agent';\n\nimport XtcIDL from './idls/xtc.did';\nimport ExtIDL from './idls/ext.did';\nimport './App.css';\n\nconst XTC_CANISTER_ID = 'aanaa-xaaaa-aaaah-aaeiq-cai';\nconst STARVERSE_CID = 'nbg4r-saaaa-aaaah-qap7a-cai';\nexport const CYCLES_PER_TC = 1_000_000_000_000;\n\nexport const to32bits = (num) => {\n  const b = new ArrayBuffer(4);\n  new DataView(b).setUint32(0, num);\n  return Array.from(new Uint8Array(b));\n};\n\nconst getTokenIdentifier = (canister, index) => {\n  const padding = Buffer.from('\\x0Atid');\n  const array = new Uint8Array([\n    ...padding,\n    ...Principal.fromText(canister).toUint8Array(),\n    ...to32bits(index),\n  ]);\n  return Principal.fromUint8Array(array).toText();\n};\n\nfunction App() {\n  const [to, setTo] = useState();\n  const [amount, setAmount] = useState(0);\n  const [connected, setConnected] = useState(false);\n  const [nftIndex, setNFTIndex] = useState(0);\n  \n  const handleChangeTo = e => setTo(e.target.value);\n  const handleChangeAmount = e => setAmount(e.target.value);\n  const handleChangeIndex = e => setNFTIndex(e.target.value);\n\n  const safeXTCTransfer = async () => {\n    // create an actor to interact with XTC\n    const actor = await window.ic.plug.createActor({ canisterId: XTC_CANISTER_ID, interfaceFactory: XtcIDL });\n    // request a transfer using this actor\n    const response = await actor.transfer({ to: Principal.fromText(to), amount: BigInt(amount*CYCLES_PER_TC), from: [] });\n    console.log('response', response);\n  }\n\n  const unsafeXTCTransfer = async () => {\n    const actor = await Actor.createActor(XtcIDL, {\n      agent: window.ic.plug.agent,\n      canisterId: XTC_CANISTER_ID,\n    });\n    const response = await actor.transfer({ to: Principal.fromText(to), amount: BigInt(amount*CYCLES_PER_TC), from: [] });\n    console.log('response', response);\n  }\n\n\n  const safeNFTTransfer = async () => {\n    // create an actor to interact with XTC\n    const actor = await window.ic.plug.createActor({ canisterId: STARVERSE_CID, interfaceFactory: ExtIDL });\n    // request a transfer using this actor\n    const response = await actor.transfer({\n      to: { principal: Principal.from(to) },\n      from: { principal: await window.ic.plug.agent.getPrincipal() },\n      token: getTokenIdentifier(STARVERSE_CID, nftIndex),\n      amount: BigInt(1),\n      memo: new Array(32).fill(0),\n      notify: false,\n      subaccount: [],\n    });\n    console.log('response', response);\n  };\n\n  return (\n    <div className=\"flex column center\">\n      <h1>Plug Examples</h1>\n      <h2>Security Example</h2>\n      <div className=\"plug-button\">\n        {connected ? 'Connected to plug' : <PlugConnect dark onConnectCallback={() => setConnected(true)} whitelist={[XTC_CANISTER_ID]} />}\n      </div>\n      {connected ? (\n      <>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">Recipient principal</label>\n          <input name=\"to\" type=\"text\" onChange={handleChangeTo} value={to} />\n        </div>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">Amount of XTC</label>\n          <input name=\"to\" type=\"number\" onChange={handleChangeAmount} value={amount} />\n        </div>\n        <div className=\"flex column input-container\">\n          <label htmlFor=\"to\">Starverse Index</label>\n          <input name=\"to\" type=\"number\" onChange={handleChangeIndex} value={nftIndex} />\n        </div>\n        <div className=\"security-actions-container flex column\">\n          <h3>Safe Calls</h3>\n          <button type=\"button\" onClick={safeXTCTransfer}>{`Transfer ${amount} XTC (${CYCLES_PER_TC * amount} cycles)`}</button>\n          <button type=\"button\" onClick={safeNFTTransfer}>{`Transfer Starverse #${nftIndex}`}</button>\n          {/* <button type=\"button\" onClick={unsafeICPTransfer}>Transfer 0.01 ICP</button>\n          <button type=\"button\" onClick={unsafeNFTTransfer}>Transfer NFT</button> */}\n        </div>\n        <div className=\"security-actions-container\">\n          <h3>Unsafe Calls</h3>\n          <button type=\"button\" onClick={unsafeXTCTransfer}>{`Transfer 0.000001 XTC (1000 cycles)`}</button>\n          {/* <button type=\"button\" onClick={safeXTCTransfer}>{`Transfer ${amount} XTC (${CYCLES_PER_TC * amount} cycles)`}</button> */}\n          {/* <button type=\"button\" onClick={unsafeICPTransfer}>Transfer 0.01 ICP</button>\n          <button type=\"button\" onClick={unsafeNFTTransfer}>Transfer NFT</button> */}\n        </div>\n      </>\n      ) : ''}\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}