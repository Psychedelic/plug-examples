{"ast":null,"code":"export default (({\n  IDL\n}) => {\n  const SetAuthorizedSubnetworkListArgs = IDL.Record({\n    'who': IDL.Opt(IDL.Principal),\n    'subnets': IDL.Vec(IDL.Principal)\n  });\n  const ICPTs = IDL.Record({\n    'e8s': IDL.Nat64\n  });\n  const TransactionNotification = IDL.Record({\n    'to': IDL.Principal,\n    'to_subaccount': IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'from': IDL.Principal,\n    'memo': IDL.Nat64,\n    'from_subaccount': IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'amount': ICPTs,\n    'block_height': IDL.Nat64\n  });\n  const CyclesResponse = IDL.Variant({\n    'Refunded': IDL.Tuple(IDL.Text, IDL.Opt(IDL.Nat64)),\n    'CanisterCreated': IDL.Principal,\n    'ToppedUp': IDL.Null\n  });\n  const Result = IDL.Variant({\n    'Ok': CyclesResponse,\n    'Err': IDL.Text\n  });\n  return IDL.Service({\n    'set_authorized_subnetwork_list': IDL.Func([SetAuthorizedSubnetworkListArgs], [], []),\n    'transaction_notification': IDL.Func([TransactionNotification], [Result], [])\n  });\n});\nexport const init = ({\n  IDL\n}) => {\n  return [];\n};","map":{"version":3,"sources":["/Users/tomasrocchi/Documents/fleek/plug-examples/src/idls/nns-minting.did.js"],"names":["IDL","SetAuthorizedSubnetworkListArgs","Record","Opt","Principal","Vec","ICPTs","Nat64","TransactionNotification","Nat8","CyclesResponse","Variant","Tuple","Text","Null","Result","Service","Func","init"],"mappings":"AAAA,gBAAe,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAa;AAC1B,QAAMC,+BAA+B,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACjD,WAAQF,GAAG,CAACG,GAAJ,CAAQH,GAAG,CAACI,SAAZ,CADyC;AAEjD,eAAYJ,GAAG,CAACK,GAAJ,CAAQL,GAAG,CAACI,SAAZ;AAFqC,GAAX,CAAxC;AAIA,QAAME,KAAK,GAAGN,GAAG,CAACE,MAAJ,CAAW;AAAE,WAAQF,GAAG,CAACO;AAAd,GAAX,CAAd;AACA,QAAMC,uBAAuB,GAAGR,GAAG,CAACE,MAAJ,CAAW;AACzC,UAAOF,GAAG,CAACI,SAD8B;AAEzC,qBAAkBJ,GAAG,CAACG,GAAJ,CAAQH,GAAG,CAACK,GAAJ,CAAQL,GAAG,CAACS,IAAZ,CAAR,CAFuB;AAGzC,YAAST,GAAG,CAACI,SAH4B;AAIzC,YAASJ,GAAG,CAACO,KAJ4B;AAKzC,uBAAoBP,GAAG,CAACG,GAAJ,CAAQH,GAAG,CAACK,GAAJ,CAAQL,GAAG,CAACS,IAAZ,CAAR,CALqB;AAMzC,cAAWH,KAN8B;AAOzC,oBAAiBN,GAAG,CAACO;AAPoB,GAAX,CAAhC;AASA,QAAMG,cAAc,GAAGV,GAAG,CAACW,OAAJ,CAAY;AACjC,gBAAaX,GAAG,CAACY,KAAJ,CAAUZ,GAAG,CAACa,IAAd,EAAoBb,GAAG,CAACG,GAAJ,CAAQH,GAAG,CAACO,KAAZ,CAApB,CADoB;AAEjC,uBAAoBP,GAAG,CAACI,SAFS;AAGjC,gBAAaJ,GAAG,CAACc;AAHgB,GAAZ,CAAvB;AAKA,QAAMC,MAAM,GAAGf,GAAG,CAACW,OAAJ,CAAY;AAAE,UAAOD,cAAT;AAAyB,WAAQV,GAAG,CAACa;AAArC,GAAZ,CAAf;AACA,SAAOb,GAAG,CAACgB,OAAJ,CAAY;AACjB,sCAAmChB,GAAG,CAACiB,IAAJ,CAC/B,CAAChB,+BAAD,CAD+B,EAE/B,EAF+B,EAG/B,EAH+B,CADlB;AAMjB,gCAA6BD,GAAG,CAACiB,IAAJ,CACzB,CAACT,uBAAD,CADyB,EAEzB,CAACO,MAAD,CAFyB,EAGzB,EAHyB;AANZ,GAAZ,CAAP;AAYD,CAjCD;AAkCA,OAAO,MAAMG,IAAI,GAAG,CAAC;AAAElB,EAAAA;AAAF,CAAD,KAAa;AAAE,SAAO,EAAP;AAAY,CAAxC","sourcesContent":["export default ({ IDL }) => {\n  const SetAuthorizedSubnetworkListArgs = IDL.Record({\n    'who' : IDL.Opt(IDL.Principal),\n    'subnets' : IDL.Vec(IDL.Principal),\n  });\n  const ICPTs = IDL.Record({ 'e8s' : IDL.Nat64 });\n  const TransactionNotification = IDL.Record({\n    'to' : IDL.Principal,\n    'to_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'from' : IDL.Principal,\n    'memo' : IDL.Nat64,\n    'from_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'amount' : ICPTs,\n    'block_height' : IDL.Nat64,\n  });\n  const CyclesResponse = IDL.Variant({\n    'Refunded' : IDL.Tuple(IDL.Text, IDL.Opt(IDL.Nat64)),\n    'CanisterCreated' : IDL.Principal,\n    'ToppedUp' : IDL.Null,\n  });\n  const Result = IDL.Variant({ 'Ok' : CyclesResponse, 'Err' : IDL.Text });\n  return IDL.Service({\n    'set_authorized_subnetwork_list' : IDL.Func(\n        [SetAuthorizedSubnetworkListArgs],\n        [],\n        [],\n      ),\n    'transaction_notification' : IDL.Func(\n        [TransactionNotification],\n        [Result],\n        [],\n      ),\n  });\n};\nexport const init = ({ IDL }) => { return []; };"]},"metadata":{},"sourceType":"module"}